{"version":3,"sources":["webpack:///./src/pages/about.jsx"],"names":["AboutPage","state","menuOpen","handleOnClick","evt","stopPropagation","closeMenu","openMenu","handleOnClose","setState","render","this","props","location","data","slug","pageContext","postNode","markdownRemark","post","result","id","category_id","config","postDefaultCategoryID","parsePost","frontmatter","cover","title","date","author","className","post_class","authorData","AuthorModel","getAuthor","authors","edges","blogAuthorId","isOpen","siteTitle","postPath","postSEO","onClose","logo","siteLogo","navigation","siteNavigation","onClick","dangerouslySetInnerHTML","__html","html","prefix","pathname","copyright","promoteGatsby","Component","pageQuery"],"mappings":"4cAmCMA,E,oJACJC,MAAQ,CACNC,UAAU,G,EAGZC,cAAgB,SAAAC,GACdA,EAAIC,kBACA,EAAKJ,MAAMC,SACb,EAAKI,YAEL,EAAKC,Y,EAITC,cAAgB,SAAAJ,GACdA,EAAIC,kBACJ,EAAKC,a,EAGPC,SAAW,WACT,EAAKE,SAAS,CAAEP,UAAU,K,EAG5BI,UAAY,WACV,EAAKG,SAAS,CAAEP,UAAU,K,8BAG5BQ,OAAA,WAAU,IAAD,EACiCC,KAAKC,MAArCC,EADD,EACCA,SAAUC,EADX,EACWA,KACVC,EAFD,EACiBC,YAChBD,KACFE,EAAWH,EAAKI,eAChBC,EA1CV,SAAmBA,EAAMJ,GACvB,IAAMK,EAASD,EAOf,OANKC,EAAOC,KACVD,EAAOC,GAAKN,GAETK,EAAOC,KACVD,EAAOE,YAAcC,IAAOC,uBAEvBJ,EAkCQK,CAAUR,EAASS,YAAaX,GACrCY,EAA+BR,EAA/BQ,MAAOC,EAAwBT,EAAxBS,MAAOC,EAAiBV,EAAjBU,KAAMC,EAAWX,EAAXW,OACtBC,EAAYZ,EAAKa,WAAab,EAAKa,WAAa,OAChDC,EAAaC,IAAYC,UAC7BrB,EAAKsB,QAAQC,MACbP,EACAP,IAAOe,cAGT,OACE,kBAAC,IAAD,CAAQzB,SAAUA,GAChB,kBAAC,IAAD,CAAQkB,UAAU,gBAAgBQ,OAAQ5B,KAAKV,MAAMC,UACnD,kBAAC,IAAD,KACE,0CAAmBqB,IAAOiB,YAE5B,kBAAC,IAAD,CAAKC,SAAU1B,EAAME,SAAUA,EAAUyB,SAAO,IAGhD,kBAAC,IAAD,CAAYnB,OAAQA,IAAQoB,QAAShC,KAAKH,gBAE1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYuB,UAAU,YAAYJ,MAAOA,GACvC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUiB,KAAMrB,IAAOsB,SAAUjB,MAAOL,IAAOiB,YAC/C,kBAAC,IAAD,CACEM,WAAYvB,IAAOwB,eACnBC,QAASrC,KAAKR,kBAIpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgB4B,UAAWA,GACzB,kBAAC,IAAD,KACE,wBAAIA,UAAU,cAAcH,GAC5B,6BAASG,UAAU,aACjB,kBAAC,IAAD,CAAUF,KAAMA,MAIpB,6BACEE,UAAU,eACVkB,wBAAyB,CAAEC,OAAQjC,EAASkC,QAG9C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAarB,OAAQG,IACrB,kBAAC,IAAD,CAAYmB,OAAO,UAAUtB,OAAQG,IACrC,kBAAC,IAAD,CACEhB,SAAUA,EACVwB,SAAU5B,EAASwC,SACnB9B,OAAQA,SAOhB,kBAAC,IAAD,CACE+B,UAAW/B,IAAO+B,UAClBC,cAAehC,IAAOgC,oB,GA1FZC,aAoGXC,EAAS,aAgCPzD","file":"component---src-pages-about-jsx-2bc07dcdbb4844c2a21b.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport SEO from \"../components/SEO/SEO\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport MenuButton from \"../components/MenuButton/MenuButton\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainContent from \"../components/MainContent/MainContent\";\nimport PostHeader from \"../components/PostHeader/PostHeader\";\nimport PostFormatting from \"../components/PostFormatting/PostFormatting\";\nimport PostDate from \"../components/PostDate/PostDate\";\nimport PostFooter from \"../components/PostFooter/PostFooter\";\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\nimport AuthorInfo from \"../components/AuthorInfo/AuthorInfo\";\nimport PostShare from \"../components/PostShare/PostShare\";\nimport Footer from \"../components/Footer/Footer\";\nimport AuthorModel from \"../models/author-model\";\nimport Layout from \"../components/layout\";\n\nfunction parsePost(post, slug) {\n  const result = post;\n  if (!result.id) {\n    result.id = slug;\n  }\n  if (!result.id) {\n    result.category_id = config.postDefaultCategoryID;\n  }\n  return result;\n}\n\nclass AboutPage extends Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    evt.stopPropagation();\n    if (this.state.menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const { location, data, pageContext } = this.props;\n    const { slug } = pageContext;\n    const postNode = data.markdownRemark;\n    const post = parsePost(postNode.frontmatter, slug);\n    const { cover, title, date, author } = post;\n    const className = post.post_class ? post.post_class : \"post\";\n    const authorData = AuthorModel.getAuthor(\n      data.authors.edges,\n      author,\n      config.blogAuthorId\n    );\n\n    return (\n      <Layout location={location}>\n        <Drawer className=\"post-template\" isOpen={this.state.menuOpen}>\n          <Helmet>\n            <title>{`About | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n\n          {/* The blog navigation links */}\n          <Navigation config={config} onClose={this.handleOnClose} />\n\n          <SiteWrapper>\n            <MainHeader className=\"post-head\" cover={cover}>\n              <MainNav>\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n                <MenuButton\n                  navigation={config.siteNavigation}\n                  onClick={this.handleOnClick}\n                />\n              </MainNav>\n            </MainHeader>\n            <MainContent>\n              <PostFormatting className={className}>\n                <PostHeader>\n                  <h1 className=\"post-title\">{title}</h1>\n                  <section className=\"post-meta\">\n                    <PostDate date={date} />\n                  </section>\n                </PostHeader>\n\n                <section\n                  className=\"post-content\"\n                  dangerouslySetInnerHTML={{ __html: postNode.html }}\n                />\n\n                <PostFooter>\n                  <AuthorImage author={authorData} />\n                  <AuthorInfo prefix=\"/author\" author={authorData} />\n                  <PostShare\n                    postNode={postNode}\n                    postPath={location.pathname}\n                    config={config}\n                  />\n                </PostFooter>\n              </PostFormatting>\n            </MainContent>\n\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPageAbout {\n    markdownRemark(fields: { slug: { eq: \"/about\" } }) {\n      html\n      timeToRead\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n        author\n      }\n      fields {\n        slug\n      }\n    }\n    # authors\n    authors: allAuthorsJson {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n        }\n      }\n    }\n  }\n`;\n\nexport default AboutPage;\n"],"sourceRoot":""}