{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/AuthorLink/AuthorLink.jsx","webpack:///./src/components/PostFormatting/PostFormatting.jsx","webpack:///./src/components/PostHeader/PostHeader.jsx","webpack:///./src/components/PostDate/PostDate.jsx","webpack:///./src/models/author-model.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/AuthorThumbnail/AuthorThumbnail.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","authorsEdges","authors","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_3__","postAuthors","React","Component","pageQuery","module","exports","blogPostDir","blogAuthorDir","blogAuthorId","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteCover","siteNavigation","siteRss","siteRssAuthor","sitePaginationLimit","googleAnalyticsID","siteSocialUrls","postDefaultCategoryID","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","promoteGatsby","AuthorLink","_this$props","name","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","PostFormatting","children","PostHeader","PostDate","date","dateTime","moment","Date","format","findName","author","uid","authorEdgesToList","authorEdges","map","edge","node","AuthorModel","hasAuthor","authorUid","authorList","Boolean","find","getAuthor","fallbackId","MainLayout","getLocalTitle","capitalize","string","charAt","toUpperCase","slice","currentPath","pathname","replace","includes","react__WEBPACK_IMPORTED_MODULE_4___default","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","content","PostTags","prefix","tags","tag","index","arr","key","_","kebabCase","length","AuthorThumbnail","avatar","react_default","src","alt","data-pin-nopin","PostListing","postList","postEdge","path","fields","slug","frontmatter","cover","SiteConfig","excerpt","timeToRead","getPostList","post","post_class","gatsby_browser_entry","components_AuthorThumbnail_AuthorThumbnail","image"],"mappings":"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","file":"component---src-templates-category-jsx-6db2b39323e6b1a1734e.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport Layout from \"../components/layout\";\n\nclass CategoryTemplate extends React.Component {\n  render() {\n    const category = this.props.pageContext.category;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    const authorsEdges = this.props.data.authors.edges;\n    return (\n      <Layout location={this.props.location}>\n        <div className=\"category-container\">\n          <Helmet\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n          />\n          <PostListing postEdges={postEdges} postAuthors={authorsEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n    # authors\n    authors: allAuthorsJson {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n        }\n      }\n    }\n  }\n`;\n\nexport default CategoryTemplate;\n","module.exports = {\n  blogPostDir: \"fauzana-posts\", // The name of directory that contains your posts.\n  blogAuthorDir: \"blog-authors\", // The name of directory that contains your 'authors' folder.\n  blogAuthorId: \"fauzana\", // The default and fallback author ID used for blog posts without a defined author.\n  siteTitle: \"The Fauzana Times\", // Site title.\n  siteTitleAlt: \"It's not about bit, byte, and protocol. But profits, loses, and margins.\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest. e.g. \"/logos/logo-1024.png\",\n  siteUrl: \"https://fauzana.com\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-starter-casper/.\n  siteDescription:\n    \"The personal site of Fauzana S. Software Engineer based in Jakarta, Indonesia.\", // Website description used for RSS feeds/meta description tag.\n  siteCover: \"/images/blog-cover.jpg\", // Optional, the cover image used in header for home page. e.g: \"/images/blog-cover.jpg\",\n  siteNavigation: true, // If navigation is enabled the Menu button will be visible\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteRssAuthor: \"Fauzana S\", // The author name used in the RSS file\n  // siteFBAppID: \"1825356251115265\", // optional, sets the FB Application ID for using app insights\n  sitePaginationLimit: 7, // The max number of posts per page.\n  googleAnalyticsID: \"UA-111982167-1\", // GA tracking ID.\n  // disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // enables Disqus comments, visually deviates from original Casper theme.\n  siteSocialUrls: [\n    // \"https://github.com/fauzana\",\n    // \"https://twitter.com/fauzana_s\",\n    // \"mailto:fauzanaisnana@gmail.com\"\n  ],\n  postDefaultCategoryID: \"Random\", // Default category for posts.\n  // Links to social profiles/projects you want to display in the navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/fauzana\",\n      iconClassName: \"fa fa-github\" // Disabled, see Navigation.jsx\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/fauzana_s\",\n      iconClassName: \"fa fa-twitter\" // Disabled, see Navigation.jsx\n    },\n    {\n      label: \"Instagram\",\n      url: \"https://instagram.com/fauzana_s\",\n      iconClassName: \"fa fa-instagram\" // Disabled, see Navigation.jsx\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:fauzanaisnana@gmail.com\",\n      iconClassName: \"fa fa-envelope\" // Disabled, see Navigation.jsx\n    }\n  ],\n  // Copyright string for the footer of the website and RSS feed.\n  copyright: {\n    label: \"Gatsby Casper Starter\" // Label used before the year\n    // year: \"2019\" // optional, set specific copyright year or range of years, defaults to current year\n    // url: \"https://www.gatsbyjs.org/\" // optional, set link address of copyright, defaults to site root\n  },\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\", // Used for setting manifest background color.\n  promoteGatsby: true // Enables the GatsbyJS promotion information in footer.\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./AuthorLink.css\";\n\nclass AuthorLink extends React.Component {\n  render() {\n    const { name, url } = this.props;\n    if (name && url) {\n      return <Link to={url}>{name}</Link>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLink;\n","import React from \"react\";\nimport \"./PostFormatting.css\";\n\nclass PostFormatting extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    return <article className={className}>{children}</article>;\n  }\n}\n\nexport default PostFormatting;\n","import React from \"react\";\nimport \"./PostHeader.css\";\n\nclass PostHeader extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <header className=\"post-header\">{children}</header>;\n  }\n}\n\nexport default PostHeader;\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"./PostDate.css\";\n\nclass PostDate extends React.Component {\n  render() {\n    const { date } = this.props;\n    return (\n      <time\n        className=\"post-date\"\n        dateTime={moment(new Date(date)).format(\"YYYY-MM-DD\")}\n      >\n        {moment(new Date(date)).format(\"DD MMMM YYYY\")}\n      </time>\n    );\n  }\n}\n\nexport default PostDate;\n","const findName = name => author => author.uid === name;\nconst authorEdgesToList = authorEdges => authorEdges.map(edge => edge.node);\n\nclass AuthorModel {\n  static hasAuthor(authorEdges, authorUid) {\n    const authorList = authorEdgesToList(authorEdges);\n    return Boolean(authorList.find(findName(authorUid)));\n  }\n\n  static getAuthor(authorEdges, authorUid, fallbackId) {\n    const authorList = authorEdgesToList(authorEdges);\n    if (this.hasAuthor(authorEdges, authorUid)) {\n      return authorList.find(findName(authorUid));\n    }\n    return authorList.find(findName(fallbackId));\n  }\n}\n\nexport default AuthorModel;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./layout.css\";\n\nexport default class MainLayout extends React.Component {\n  getLocalTitle() {\n    function capitalize(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    const pathPrefix = config.pathPrefix ? config.pathPrefix : \"/\";\n    const { location } = this.props;\n    const currentPath = location.pathname.replace(pathPrefix, \"\").replace(\"/\", \"\");\n    let title = \"\";\n    if (currentPath === \"\") {\n      title = \"Home\";\n    } else if (currentPath === \"tags/\") {\n      title = \"Tags\";\n    } else if (currentPath === \"categories/\") {\n      title = \"Categories\";\n    } else if (currentPath === \"about/\") {\n      title = \"About\";\n    } else if (currentPath.includes(\"posts\")) {\n      title = \"Article\";\n    } else if (currentPath.includes(\"tags/\")) {\n      const tag = currentPath\n        .replace(\"tags/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `Tagged in ${capitalize(tag)}`;\n    } else if (currentPath.includes(\"categories/\")) {\n      const category = currentPath\n        .replace(\"categories/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `${capitalize(category)}`;\n    }\n    return title;\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport \"./PostTags.css\";\n\nclass PostTags extends Component {\n  render() {\n    const { prefix, tags } = this.props;\n    if (tags) {\n      return (\n        <span>\n          {prefix}\n          {tags.map((tag, index, arr) => (\n            <span key={tag}>\n              <Link key={tag} to={`/tags/${_.kebabCase(tag)}`}>\n                {tag}\n              </Link>\n              {index !== arr.length - 1 ? \", \" : \"\"}\n            </span>\n          ))}\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default PostTags;\n","import React from \"react\";\nimport \"./AuthorThumbnail.css\";\n\nclass AuthorThumbnail extends React.Component {\n  render() {\n    const { avatar, name } = this.props;\n    if (avatar && name) {\n      return (\n        <img\n          className=\"author-thumb\"\n          src={avatar}\n          alt={name}\n          data-pin-nopin=\"true\"\n        />\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorThumbnail;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport AuthorThumbnail from \"../AuthorThumbnail/AuthorThumbnail\";\nimport PostTags from \"../PostTags/PostTags\";\nimport SiteConfig from \"../../../data/SiteConfig\";\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\nimport PostFormatting from \"../PostFormatting/PostFormatting\";\nimport PostHeader from \"../PostHeader/PostHeader\";\nimport PostDate from \"../PostDate/PostDate\";\nimport AuthorModel from \"../../models/author-model\";\nimport \"./PostListing.css\";\n\nconst getPostList = (postEdges, authorEdges) =>\n  postEdges.map(postEdge => ({\n    path: postEdge.node.fields.slug,\n    tags: postEdge.node.frontmatter.tags,\n    cover: postEdge.node.frontmatter.cover,\n    title: postEdge.node.frontmatter.title,\n    date: postEdge.node.frontmatter.date,\n    author: AuthorModel.getAuthor(\n      authorEdges,\n      postEdge.node.frontmatter.author,\n      SiteConfig.blogAuthorId\n    ),\n    excerpt: postEdge.node.excerpt,\n    timeToRead: postEdge.node.timeToRead\n  }));\n\nclass PostListing extends React.Component {\n  render() {\n    const { postEdges, postAuthors } = this.props;\n    const postList = getPostList(postEdges, postAuthors);\n\n    return (\n      <div>\n        {/* This is the post loop - each post will be output using this markup */}\n        {postList.map(post => {\n          const { title, path, excerpt, author, tags, date } = post;\n          const className = post.post_class ? post.post_class : \"post\";\n\n          return (\n            <PostFormatting className={className} key={title}>\n              <PostHeader>\n                <h2 className=\"post-title\">\n                  <Link to={path}>{title}</Link>\n                </h2>\n              </PostHeader>\n              <section className=\"post-excerpt\">\n                {/* TODO limit excerpt to 26 words */}\n                <p>\n                  {excerpt}\n                  {\" \"}\n                  <Link className=\"read-more\" to={path}>\n                    &raquo;\n                  </Link>\n                </p>\n              </section>\n              <footer className=\"post-meta\">\n                <AuthorThumbnail avatar={author.image} name={author.name} />\n                <AuthorLink url={`/author/${author.uid}`} name={author.name} />\n                <PostTags prefix=\" on \" tags={tags} />\n                <PostDate date={date} />\n              </footer>\n            </PostFormatting>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}